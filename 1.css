body{
	background: url("bg.jpg");
	backgroung-size:cover;
	background-repeat:round;
	background-attachment:fixed;
}
h1 {
    font-size: 70px;
}
.shell {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    display: grid;
    grid-template-rows: 500px 200px;
}

.box {
    /*  将容器放置在第一行，其高度为第一行的高度 */
    grid-row: 1 / 2;
    /*  将容器放置在第一列，其宽度为第一到第八列的宽度 */
    grid-column: 1 / 8;
    width: 100vw;
    height: 570px;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    /* 设置 3D 转换，以便于创建立体效果 */
    transform-style: preserve-3d;
    /* 定义立体效果的观察距离 */
    perspective: 800px;
    /*  定义容器内包含的元素数量 */
    --items: 5;
    /* 定义容器内居中显示的元素 */
    --middle: 3;
    /* 定义容器内当前位置的元素 */
    --position: 1;
}

div.item {
    position: absolute;
    width: 350px;
    height: 500px;
    background-color: coral;
    /* 定义一个 CSS 变量 --r 的值为 var(--position) - var(--offset) */
    --r: calc(var(--position) - var(--offset));
    /* 定义变量 --abs 的值为 var(--r) * -1 和 var(--r) 中的最大值 */
    --abs: max(calc(var(--r) * -1), var(--r));
    /* 元素的过渡效果为所有属性在 0.25 秒内以线性方式变化 */
    transition: all 0.25s linear;
    /* 旋转-10deg*var(--r)角度,并向x轴负方向平移-330px*var(--r) */
    transform: rotateY(calc(-10deg * var(--r))) translateX(calc(-330px * var(--r)));
    /* 使当前的图片位于最前面 */
    z-index: calc((var(--position) - var(--abs)));
    background-size: cover;
    box-shadow: 0px 0px 30px rgba(0, 0, 0, 0.6);
    border: #b5c5ff 10px solid;
    border-radius: 5px;
}

input {
    width: 35px;
    height: 35px;
    margin: 10px;
}

.box .item:nth-of-type(1) {
    --offset: 1;
    background-image: url(01.png);
}

.box .item:nth-of-type(2) {
    --offset: 2;
    background-image: url(02.png);
}

.box .item:nth-of-type(3) {
    --offset: 3;
    background-image: url(03.png);
}

.box .item:nth-of-type(4) {
    --offset: 4;
    background-image: url(04.png);
}

.box .item:nth-of-type(5) {
    --offset: 5;
    background-image: url(05.png);
}

input:nth-of-type(1) {
    grid-column: 2/3;
    grid-row: 2/3;
}

input:nth-of-type(2) {
    grid-column: 3/4;
    grid-row: 2/3;
}

input:nth-of-type(3) {
    grid-column: 4/5;
    grid-row: 2/3;
}

input:nth-of-type(4) {
    grid-column: 5/6;
    grid-row: 2/3;
}

input:nth-of-type(5) {
    grid-column: 6/7;
    grid-row: 2/3;
}

input:nth-of-type(1):checked~.box {
    --position: 1;
}

input:nth-of-type(2):checked~.box {
    --position: 2;
}

input:nth-of-type(3):checked~.box {
    --position: 3;
}

input:nth-of-type(4):checked~.box {
    --position: 4;
}

input:nth-of-type(5):checked~.box {
    --position: 5;
}
.start{
	font-size:25px;
	color:#FFF;
	background:linear-gradient(
	to right bottom,
	rgba(255,255,255,0.6),
	rgba(255,255,255,0.1)
	);
	/*background-color:#497271;*/
	border-radius:10px;
	height:20px;
	line-height:20px;
	width:55px;
	text-align:center;
	margin:0 auto;
	padding:20px;
	box-shadow:rgba(0,0,0,0.5) 3px 3px 4px;
	position:relative;
}
.start a{
	text-decoration:none;
	color:#FFF;
}
.mask{
	position:absolute;
	display:block;
	height:0;
	background-color:#FFF;
	opacity:1;
	width:0;
	left:50%;
	top:50%;
	border-radius:50%;
}
.start:hover .mask{
	animation-name:animation;
	animation-duration:1s;
}
@Keyframes animation{
	from{
		width:1px;
		height:1px;
		transform:scale(0);
		opacity:1;
	}
	to{
		width:1px;
		height:1px;
		transform:scale(100);
		opacity:0;
	}
}


